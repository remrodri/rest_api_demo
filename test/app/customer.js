// Generated by CoffeeScript 1.10.0
(function() {
  var client, request, should;

  should = require('should');

  request = require('request-json');

  client = request.createClient('http://localhost:3000/');

  describe('Customer', function() {
    var id_customer;
    id_customer = null;
    describe('POST /customer', function() {
      var customer;
      customer = null;
      before(function(done) {
        customer = {
          name: 'David',
          email: 'david@gmail.com',
          preferred_barber: 'David'
        };
        return done();
      });
      return it('should return OK', function(done) {
        return client.post('customer/', customer, function(err, res, body) {
          res.statusCode.should.be.exactly(200);
          id_customer = res.body._id;
          return done();
        });
      });
    });
    describe('POST /customer', function() {
      var customer;
      customer = null;
      before(function(done) {
        customer = {
          name: 'Sam',
          email: 'samgmail.com',
          preferred_barber: 'Sam'
        };
        return done();
      });
      return it('should return status code 400 email invalid', function(done) {
        return client.post('customer/', customer, function(err, res, body) {
          res.statusCode.should.be.exactly(400);
          return done();
        });
      });
    });
    describe('POST /customer', function() {
      var customer;
      customer = null;
      before(function(done) {
        customer = {
          name: 'Nancy',
          email: 'david@gmail.com',
          preferred_barber: 'Nancy'
        };
        return done();
      });
      return it('should return status 400 Email already exists', function(done) {
        return client.post('customer/', customer, function(err, res, body) {
          res.statusCode.should.be.exactly(400);
          return done();
        });
      });
    });
    describe('GET /customer/:id', function() {
      var id;
      id = null;
      before(function(done) {
        id = id_customer;
        return done();
      });
      return it('should return OK', function(done) {
        return client.get('customer/' + id, {}, function(err, res, body) {
          res.statusCode.should.be.exactly(200);
          return done();
        });
      });
    });
    describe('GET / customer/:id', function() {
      var id;
      id = null;
      before(function(done) {
        id = '5601dd84be9ec1e0205e61qw';
        return done();
      });
      return it('should return customer not found', function(done) {
        return client.get('customer/' + id, {}, function(err, res, body) {
          res.statusCode.should.be.exactly(404);
          return done();
        });
      });
    });
    describe('PUT /customer/:id', function() {
      var data;
      data = null;
      before(function(done) {
        data = {
          preferred_barber: "Dain DDDDDDDDDD"
        };
        return done();
      });
      return it('should return OK', function(done) {
        return client.put('customer/' + id_customer, data, function(err, res, body) {
          res.statusCode.should.be.exactly(200);
          return done();
        });
      });
    });
    return describe('PUT / customer/:id', function() {
      var data;
      data = null;
      before(function(done) {
        id_customer = "5601dd84be9ec1e0205e6144";
        data = {
          name: "roli roli",
          email: "roliroli@gmail.com",
          preferred_barber: "Dain"
        };
        return done();
      });
      return it('should return customer not found', function(done) {
        return client.put('customer/' + id_customer, data, function(err, res, body) {
          res.statusCode.should.be.exactly(404);
          return done();
        });
      });
    });
  });

}).call(this);
