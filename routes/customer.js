// Generated by CoffeeScript 1.10.0
(function() {
  var customer, routes, thereIsEmail, validateEmail;

  customer = require('../models/customer');

  validateEmail = function(email) {
    var re;
    re = /^\w+([\.-]?\w+)*@\w+([\.-]?\w+)*(\.\w{2,3})+$/;
    return re.test(email);
  };

  thereIsEmail = function(email, cb) {
    var criteria;
    criteria = {
      email: email
    };
    return customer.findOne(criteria, function(err, _customer_email) {
      if (err) {
        cb(err);
      } else {
        if (_customer_email === null) {
          cb(null, false);
        } else if (_customer_email !== null) {
          cb(null, true);
        }
      }
    });
  };

  routes = function(app) {
    return app.post('/customer', function(req, res) {
      var attributes, isValid;
      attributes = {
        name: req.body.name,
        email: req.body.email,
        preferred_barber: req.body.preferred_barber
      };
      isValid = validateEmail(req.body.email);
      if (req.body.name !== "" && req.body.email !== "" && req.body.preferredBarber !== "") {
        if (isValid) {
          return thereIsEmail(req.body.email, function(err, flag) {
            var new_customer;
            console.log("flag: " + flag);
            if (flag === false) {
              new_customer = new customer(attributes);
              return new_customer.save(function(err, customer) {
                if (err) {
                  return res.json(err, 500);
                }
                return res.json(customer);
              });
            } else {
              return res.status(400).send('Email already exists');
            }
          });
        } else {
          return res.status(400).send('Email not valid.');
        }
      } else {
        return res.status(400).send('The name, email and preferred_barber is required');
      }
    });
  };

  module.exports = routes;

}).call(this);
